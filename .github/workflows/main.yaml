name: workflow

on:
  push: 
    branches:
      - main
    paths-ignore:
      - "README.md"

permissions:
  id-token: write 
  contents: read

jobs: 
  integration:
    name: Continuous integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code 
        uses: actions/checkout@3

      - name: Lint Code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  push_to_registry:
    name: Push Docker image to Docker hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Setup docker build
        uses: docker/setup-buildx-action@v2

      - name: Login to docker hub
        uses: docker/login-action@
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@
        with:
          images: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.output.labels }}


  Continuous-Deployment:
    needs: push_to_registry
    runs-on: self-hosted
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Docker hub  
        uses: docker/login-action@
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull images
        run: |
          docker pull $ {{secrets.REGISTRY}}/${{ secrets.IMAGE_NAME }}:main

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8501:8501 --name=stapp -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_ACCESS'

      - name: Clean previous images and containers
        run: |
          docker system  prune -f